h2. Taza

Taza is meant to make browser-based testing more sane for developers(or QA where applicable) and customers.

h3. RESOURCES

* Here's a brief(~8min) "screencast":http://blip.tv/file/1483249 showing the above example
* "#coors on FreeNode":irc://irc.freenode.net/coors

h3. FEATURES

* Generate a project for browser-based testing
* Generate pages and sites for different applications
* Create flows that move through a site
* Use filters to control which elements are accessible on a page depending on its state
* Taza automatically creates and cleans up the browser for each site just like a File block
* Manage tests by tags
* Cross-site testing

h3. ISSUES

* Taza has only been used in the wild with WATIR(Safari/Firefox/IE), but Selenium support is built-in
* Taza's generators currently generate RSpec specs, Test::Unit and other test framework support is planned

h3. SYNOPSIS

Taza is meant to be a refreshing way to look at browser testing. Taza provides a few ways to abstract browser-based 
testing into three simple ideas.

  * [[Sites]]
  * [[Pages]]
  * [[Flows]]

[[Sites]] have [[Pages]].
[[Pages]] have [[Elements]] and [[Filters]].
[[Flows]] are common actions on a site such as logging in or performing a search.

h3. EXAMPLE

Here's an example for starting a project around the Google sites

  $ taza google
  $ cd google/
  $ ./script/generate site google
  $ ./script/generate page home_page google
  $ ./script/generate flow search google
  $ rake spec:functional:google

That will generate an RSpec HTML report at artifacts/functional/google/index.html

